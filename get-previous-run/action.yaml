name: get-previous-run

description: Given a workflow name and number will return the most recent workflow run before it (i.e. n - 1)

inputs:
  WORKFLOW_NAME:
    description: name of the workflow of interest (typically `github.workflow`)
    type: string
    required: true
  WORKFLOW_RUN_NUMBER:
    description: numerical ID for the run that proceeds the workflow run being sought (must be greater than 1)
    type: string
    required: true

outputs:
  id:
    description: the id of the run that occurs before the given workflow and run
    value: ${{ steps.get-prev-run.outputs.id }}

runs:
  using: composite
  steps:
    - name: Some debugging statements...
      id: debug
      shell: bash
      env:
        ACTION_PATH: ${{ github.action_path }}
      run: |
        echo "::info::github.action_path == \"$ACTION_PATH\""
        echo "::group::list of all of \"$ACTION_PATH\""
        ls -aR "$ACTION_PATH"
        echo '::endgroup::'

    - id: calculate-prev-run
      shell: bash
      env:
        CURRENT_RUN_NUMBER: ${{ inputs.WORKFLOW_RUN_NUMBER }}
      run: |
        echo "number=$(( $CURRENT_RUN_NUMBER - 1 ))" | tee -a "$GITHUB_OUTPUT"

    - id: get-prev-run
      shell: bash
      env:
        PREV_RUN_NUM: ${{ steps.calculate-prev-run.outputs.number }}
        WORKFLOW_NAME: ${{ inputs.WORKFLOW_NAME }}
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        twenty_most_recent_runs=$(mktemp)
        # note: default for --limit in `gh run list ...` is 20
        # TODO should repo be passed in as an input?
        gh run list -R ${{ github.repository }} -w $WORKFLOW_NAME --json databaseId,number \
            > $twenty_most_recent_runs
        # <debug>
        echo '::group::20 most recent workflow runs'
        jq . $twenty_most_recent_runs
        echo '::endgroup::'
        # </debug>
        previous_run_wrapped_array=$(jq --argjson prev "$PREV_RUN_NUM" \
            'map(select(.number == $prev))' $twenty_most_recent_runs)
        if [[ $(jq 'length' <<< $previous_run_wrapped_array) < 1 ]]; then
          # TODO make script more robust by looking back further
          # can even use difference between current number and number of latest to determine search coordinates
          echo "::error::unable to find the previous run (#$RUN_BEFORE) in lastest 20 workflow runs"
          exit 1
        fi
        previous_run=$(jq 'first' <<< $previous_run_wrapped_array)
        # <debug>
        echo "::group::workflow run #$PREV_RUN_NUM"
        jq . <<< $previous_run
        echo '::endgroup::'
        # <debug>
        echo "id=$(jq --raw-output '.databaseId' <<< $previous_run)" | tee -a "$GITHUB_OUTPUT"
